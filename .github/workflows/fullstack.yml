name: "FullStack"
on:
  push:


jobs:
  test-host:
    runs-on: ubuntu-latest
    container: openmage/php:7.3.20
    strategy:
      max-parallel: 2
      matrix:
        operating-system: [ubuntu-latest]
        php:
          - fpm-image: 'openmage/php:7.3.20'
            cli-setup: '7.3'
#          - fpm-image: 'openmage/php:7.3.20'
#            cli-setup: '7.3'
        magento-version: [ '2.4.0' ]
        mysql-images: [ 'mysql:5.7']
        # mysql:8 requires --default-authentication-plugin=mysql_native_password

    services:
      mysql:
        image: ${{ matrix.mysql-images }}
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: magento2
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      elastic:
        image: 7.9.2
        ports:
          - 9200:9200
      fpm:
        image: ${{ matrix.php.fpm-image }}
        ports:
          - 9000:9000
        volumes:
          - ${{ github.workspace }}/:/var/www
      #          - ${{ github.workspace }}/.github/workflows/fpm-ini-overrides.ini:/etc/php/7.3/fpm/conf.d/99-overrides.ini
      nginx:
        image: flyingmana/openmage-action-service:nginx
        ports:
          - 8080:80
        volumes:
          - ${{ github.workspace }}/:/var/www
#          - ${{ github.workspace }}/.github/workflows/integration/nginx.conf:/etc/nginx/conf.d/default.conf


    steps:
      - uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config -g cache-files-dir)"
      - name: Cache PHP dependencies
        uses: actions/cache@v1
        with:
          path: magento
          key: ${{ runner.OS }}-magento-${{ matrix.magento-version }}
      - name: FS check
        run: |
          mkdir -p ${{ steps.composer-cache.outputs.dir }}
          mkdir -p magento
          cp m2-composer-templates/2.4.0-composer.json magento/composer.json
          cp m2-composer-templates/2.4.0-composer.lock magento/composer.lock
          ls -la

      - name: Cache Composer Downloads
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.magento-version }}-2


      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php.cli-setup }}
          extension-csv: mbstring #optional, setup extensions
          ini-values-csv: post_max_size=256M, short_open_tag=On #optional, setup php.ini configuration
          coverage: none #optional, setup coverage driver
          pecl: true #optional, setup PECL
      - name: Check PHP Version
        run: php -v

      - name: Install Magento Source
        uses: php-actions/composer@v2
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
        with:
          command: install --ignore-platform-reqs --working-dir ./magento

      - name: Install Database
        run: |
          cd ./magento
          php -v
          php ./bin/magento --version
          php ./bin/magento list
          ./bin/magento setup:install --db-host mysql --db-user root --db-password password --base-url http://nginx/ --admin-firstname Nia --admin-lastname Admin --admin-email test@example.com --admin-user nia-admin --admin-password nia-1-placeholder-password --search-engine=elasticsearch7 --elasticsearch-host=elastic --elasticsearch-port=9200
      - name: FS check
        run: |
          ls -la
          ls -la magento
          ls -la /home/runner/.composer/cache/files
      - name: docker logs
        run: |
          docker logs "${{ job.services.nginx.id }}"
          docker logs "${{ job.services.fpm.id }}"
